{"version":3,"sources":["Components/Navigation/Navigation.js","Components/Logo/Logo.js","Components/Rank/Rank.js","Components/ImageLinkInput/ImageLinkInput.js","Components/FaceRecognition/FaceRecognition.js","Components/SignIn/SignIn.js","Components/Register/Register.js","App.js","serviceWorker.js","index.js","Components/Logo/brain.png"],"names":["Navigation","onRouteChange","onSignOut","style","display","justifyContent","onClick","className","Logo","options","max","height","width","alt","paddingTop","src","brain","Rank","ImageLinkInput","onInputChange","onButtonSubmit","onfocus","id","onFocus","onChange","type","placeholder","FaceRecognition","imageUrl","box","top","topRow","bottom","bottomRow","left","leftCol","right","rightCol","SignIn","htmlFor","name","value","Register","particlesOption","particles","number","density","enable","value_area","interactivity","events","onhover","mode","app","Clarifai","App","apiKey","param","setState","route","document","getElementById","findFaceLocation","clardata","face","outputs","data","regions","region_info","bounding_box","image","Number","top_row","left_col","bottom_row","right_col","displayFaceLocation","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","res","this","params","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.ec0a8113.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = ({onRouteChange,onSignOut}) => {\r\n\treturn (\r\n\t\t<div style={{display:'flex', justifyContent:'flex-end'}}>\r\n\t\t<p onClick={onSignOut} className='ma3 link dim underline pointer'>Sign out</p>\r\n\t\t<p onClick={()=>onRouteChange('register')} className='ma3 link dim underline pointer'>Register</p>\r\n\t\t</div>\r\n\r\n\t)\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport brain from './brain.png';\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n\treturn (\r\n\t\t<div className='ma4 mt0'>\r\n\t\t<Tilt className=\"Tilt ma3 \" options={{ max : 35 }} style={{ height: 150, width: 150 }} >\r\n \t\t<div className=\"Tilt-inner br2 shadow-2\"><img alt='' style = {{paddingTop:'5px'}} src={brain}/></div>\r\n\t\t</Tilt>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\n\r\nconst Rank = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>\r\n\t\t\t\t<div className= 'white f3'>Xy, your rank is</div>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<div className= 'white f1'>#3</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './ImageLinkInput.css'\r\n\r\nconst ImageLinkInput = ({onInputChange,onButtonSubmit,onfocus}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t<div>\r\n\t\t<p className= 'f3'>This Magic Brain will detect faces in your picture. Give it a try</p>\r\n\t\t</div>\r\n\t\t<div  className='center'>\r\n\t\t\t<div className='form center pa3 ma2 shadow-5'>\r\n\t\t\t<input id='inp' onFocus={onfocus} onChange= {onInputChange} className='f4 pa2 center w-70' type='text' placeholder='Image link here'/>\r\n\t\t\t<button onClick= {onButtonSubmit} className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'>Detect</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ImageLinkInput;","import React from 'react';\r\nimport './FaceRecognition.css'\r\n\r\nconst FaceRecognition = ({imageUrl,box}) => {\r\n\treturn (\r\n\t\t<div className='center'>\r\n\t\t<div className='absolute'>\r\n\t\t<img id='inputimage' src={imageUrl} alt='' width='500' height='auto'/>\r\n\t\t<div className= 'box' style={{top: box.topRow, bottom: box.bottomRow, left:box.leftCol, right: box.rightCol }} ></div>\r\n\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\nconst SignIn = ({onRouteChange}) =>{\r\n\treturn (\r\n<main className=\"pa4 black-80 center\">\r\n  <div className=\"measure\">\r\n    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n      <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\r\n      <div className=\"mt3\">\r\n        <label className=\"db fw6 lh-copy f5\" htmlFor=\"email-address\">Email</label>\r\n        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n      </div>\r\n      <div className=\"mv3\">\r\n        <label className=\"db fw6 lh-copy f5\" htmlFor=\"password\">Password</label>\r\n        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n      </div>\r\n    </fieldset>\r\n    <div className=\"\">\r\n      <input onClick={()=>onRouteChange('home')} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f5 dib\" type=\"submit\" value=\"Sign in\"/>\r\n    </div>\r\n  </div>\r\n</main>\r\n\t\t)\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\nconst Register = ({onRouteChange}) =>{\r\n\treturn (\r\n<main className=\"pa4 black-80 center\">\r\n  <div className=\"measure\">\r\n    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n      <legend className=\"f2 fw6 ph0 mh0\">Register</legend>\r\n      <div className=\"mt3\">\r\n        <label className=\"db fw6 lh-copy f5\" htmlFor=\"name\">Name</label>\r\n        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"name\" name=\"name\"  id=\"name\"/>\r\n      </div>\r\n      <div className=\"mt3\">\r\n        <label className=\"db fw6 lh-copy f5\" htmlFor=\"email-address\">Email</label>\r\n        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n      </div>\r\n      <div className=\"mv3\">\r\n        <label className=\"db fw6 lh-copy f5\" htmlFor=\"password\">Password</label>\r\n        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n      </div>\r\n    </fieldset>\r\n    <div className=\"\">\r\n      <input onClick={()=>onRouteChange('signin')} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f5 dib\" type=\"submit\" value=\"Register\"/>\r\n    </div>\r\n  </div>\r\n</main>\r\n\t\t)\r\n}\r\n\r\nexport default Register;","import React from 'react';\nimport {Component} from 'react';\nimport './App.css';\nimport Navigation from './Components/Navigation/Navigation';\nimport Logo from './Components/Logo/Logo';\nimport Rank from './Components/Rank/Rank';\nimport ImageLinkInput from './Components/ImageLinkInput/ImageLinkInput';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport SignIn from './Components/SignIn/SignIn';\nimport Register from './Components/Register/Register';\nimport 'tachyons';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\n\nconst particlesOption =\n  {\n      particles: {\n        number:{\n          value: 60,\n          density: {\n            enable:true,\n            value_area:500\n          }\n      }\n   },\n        interactivity: {\n          events:{\n            onhover:{\n              enable:true,\n              mode:'repulse'\n            }\n          }\n        }\n }\n\n  const app = new Clarifai.App ({\n    apiKey: '70a2c090a15345c4834ce14a0a8c1cc1'\n  });\n\nclass App extends Component {\n  constructor (){\n    super()\n    this.state={\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin'\n    }\n  }\n\n  onRouteChange = (param) => {\n      this.setState({route:param})\n  }\n\n  onFocus = () => {\n    document.getElementById('inp').value='';\n  }\n\n  onSignOut = () => {\n    this.setState({imageUrl:''});\n    this.onRouteChange('signin');\n  }\n\n  findFaceLocation = (clardata) =>{\n    const face = clardata.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      topRow: height * face.top_row,\n      leftCol: width * face.left_col,\n      bottomRow: height - (height * face.bottom_row),\n      rightCol: width - (width * face.right_col)\n    } \n  }\n\n  displayFaceLocation = (box) => {\n      this.setState({box:box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl:this.state.input});\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n    .then(res=>this.displayFaceLocation(this.findFaceLocation(res)));\n  }\n\n  render () {\n    if (this.state.route==='signin'){\n       return( <div className=\"App f3 vh-100 dt w-100\">\n        <div className='dtc v-mid tc'>\n      <Particles className= 'particles' params={particlesOption}/>\n      <SignIn onRouteChange={this.onRouteChange} />\n        </div>\n    </div>\n    )}\n    else if (this.state.route==='register'){\n       return(<div className=\"App f3 vh-100 dt w-100\">\n        <div className='dtc v-mid tc'>\n      <Particles className= 'particles' params={particlesOption}/>\n      <Register onRouteChange={this.onRouteChange} />\n        </div>\n    </div>\n    )}\n    else if (this.state.route==='home'){\n       return(<div className=\"App\">\n      <Particles className= 'particles' params={particlesOption}/>\n      <Navigation onSignOut={this.onSignOut} onRouteChange={this.onRouteChange} />\n      <Logo />\n      <Rank />\n      <ImageLinkInput onfocus={this.onFocus} onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} />\n      <FaceRecognition imageUrl={this.state.imageUrl} box={this.state.box} />\n    </div>\n    )}\n   ;\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brain.04780733.png\";"],"sourceRoot":""}